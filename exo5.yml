openapi: "3.0.3"
info:
  title: Products and Orders API
  version: "1.0.0"
paths:
  /products:
    get:
      tags:
        - Products
      summary: Récupère la liste des produits
      responses:
        '200':
          description: Liste des produits retrouvés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              example:
                - id: 1
                  name: "Ordinateur portable"
                  price: 999.99
                - id: 2
                  name: "Souris sans fil"
                  price: 29.99
  /orders:
    get:
      tags:
        - Orders
      summary: Récupère la liste paginée des commandes
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
      responses:
        '200':
          description: Liste des commandes retrouvées
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              example:
                - identifier: 1
                  customer_name: "Jean Dupont"
                  creation_datetime: "2025-09-02T10:30:00Z"
                  total_amount: 1029.98
    post:
      tags:
        - Orders
      summary: Crée une nouvelle commande
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
            example:
              identifier: 3
              customer_name: "Marie Martin"
              creation_datetime: "2025-09-02T14:45:00Z"
              total_amount: 559.97
      responses:
        '201':
          description: Commande créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Authentification requise

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  parameters:
    PageParam:
      name: page
      in: query
      description: Numéro de page
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
        example: 1
    SizeParam:
      name: size
      in: query
      description: Nombre d'éléments par page
      required: false
      schema:
        type: integer
        minimum: 1
        default: 20
        example: 20

  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
          format: double
      required:
        - id
        - name
        - price

    Order:
      type: object
      properties:
        identifier:
          type: integer
        customer_name:
          type: string
        creation_datetime:
          type: string
          format: date-time
        total_amount:
          type: number
          format: double
      required:
        - identifier
        - customer_name
        - creation_datetime
        - total_amount